name: Release CI

on:
  push:
    tags:
      - terminal_*

jobs:
  koces-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'

      - name: SET VAN
        run: echo PRD_VAN=KOCES >> ./signing.properties
        env:
          RELEASE_VAN: KOCES

      - name: Decode Keystore
        run: echo $SIGNING_KEY | base64 -di > payhere_cat_key.keystore
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}

      - name: change keystore path
        run: mv payhere_cat_key.keystore ./payhereCat/payhere_cat_key.keystore

      - name: update store file from secret
        run: echo RELEASE_STORE_FILE="$RELEASE_STORE_FILE" > ./signing.properties
        env:
          RELEASE_STORE_FILE: ${{ secrets.RELEASE_STORE_FILE }}

      - name: update store alias from secret
        run: echo RELEASE_KEY_ALIAS="$RELEASE_KEY_ALIAS" >> ./signing.properties
        env:
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}

      - name: update store password from secret
        run: echo RELEASE_STORE_PASSWORD="$RELEASE_STORE_PASSWORD" >> ./signing.properties
        env:
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}

      - name: update key password from secret
        run: echo RELEASE_KEY_PASSWORD="$RELEASE_KEY_PASSWORD" >> ./signing.properties
        env:
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

      - name: update appguard app key from secret
        run: echo APPGUARD_APP_KEY="APPGUARD_APP_KEY" >> ./signing.properties
        env:
          APPGUARD_APP_KEY: ${{ secrets.APPGUARD_APP_KEY }}

      - name: Build with Gradle
        run: bash ./gradlew assemblePrdRelease

      - name: Set tag name env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/:9}" >> $GITHUB_ENV

      - name: check tag name
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RELEASE_VERSION }}
          path: app/build/outputs/apk/prd/release/PAYHERE_CAT_${{ env.RELEASE_VAN }}_${{ env.RELEASE_VERSION }}_protected.apk

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: notify_android-build
          SLACK_COLOR: "#00FF00"
          SLACK_MESSAGE: "KOCES_${{ env.RELEASE_VERSION }} 빌드가 완료되었습니다. 아티팩트를 다운 받아 [Pax PPN](https://ppn.paxengine.com/services/sign)에 앱을 재서명해 주세요."
          SLACK_TITLE: ${{ env.RELEASE_VERSION }}
          SLACK_USERNAME: 터미널 KOCES 릴리즈 (PPN 재서명 필요)
          SLACK_WEBHOOK: ${{ secrets.ANDROID_BUILD }}
          SLACK_FOOTER: Pax PPN에 앱을 재서명해 주세요.

  nice-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'

      - name: SET VAN
        run: echo PRD_VAN=NICE >> ./signing.properties
        env:
          RELEASE_VAN: NICE
      - name: Decode Keystore
        run: echo $SIGNING_KEY | base64 -di > payhere_cat_key.keystore
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}

      - name: change keystore path
        run: mv payhere_cat_key.keystore ./payhereCat/payhere_cat_key.keystore

      - name: update store file from secret
        run: echo RELEASE_STORE_FILE="$RELEASE_STORE_FILE" > ./signing.properties
        env:
          RELEASE_STORE_FILE: ${{ secrets.RELEASE_STORE_FILE }}

      - name: update store alias from secret
        run: echo RELEASE_KEY_ALIAS="$RELEASE_KEY_ALIAS" >> ./signing.properties
        env:
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}

      - name: update store password from secret
        run: echo RELEASE_STORE_PASSWORD="$RELEASE_STORE_PASSWORD" >> ./signing.properties
        env:
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}

      - name: update key password from secret
        run: echo RELEASE_KEY_PASSWORD="$RELEASE_KEY_PASSWORD" >> ./signing.properties
        env:
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

      - name: update appguard app key from secret
        run: echo APPGUARD_APP_KEY="APPGUARD_APP_KEY" >> ./signing.properties
        env:
          APPGUARD_APP_KEY: ${{ secrets.APPGUARD_APP_KEY }}

      - name: Build with Gradle
        run: bash ./gradlew assemblePrdRelease

      - name: Set tag name env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/:9}" >> $GITHUB_ENV

      - name: check tag name
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RELEASE_VERSION }}
          path: app/build/outputs/apk/prd/release/PAYHERE_CAT_${{ env.RELEASE_VAN }}_${{ env.RELEASE_VERSION }}_protected.apk

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: notify_android-build
          SLACK_COLOR: "#00FF00"
          SLACK_MESSAGE: "NICE_${{ env.RELEASE_VERSION }} 빌드가 완료되었습니다. https://ppn.paxengine.com/services/sign에 앱을 재서명해 주세요."
          SLACK_TITLE: ${{ env.RELEASE_VERSION }}
          SLACK_USERNAME: 터미널 NICE 릴리즈 (PPN 재서명 필요)
          SLACK_WEBHOOK: ${{ secrets.ANDROID_BUILD }}
          SLACK_FOOTER: Pax PPN에 앱을 재서명해 주세요.
