plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}

android {
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.bvc.ordering"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled = true
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
            debuggable false
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.debug
            debuggable false
        }
    }
    buildFeatures {
        dataBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "${Versions.COMPOSE_VERSION}"
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        if (name.contains("Test")) {
            enabled = false
        }
    }
    namespace 'com.bvc.ordering'
}

dependencies {

    implementation project(path: ':domain')
    implementation project(path: ':data')

    implementation(Kotlin.STDLIB)
    implementation(KTX.CORE)
    implementation(AndroidX.APP_COMPAT)
    implementation(Google.MATERIAL)

    // Jetpack Compose
    implementation(Compose.MATERIAL3)
    implementation(Compose.ACTIVITY)
    implementation(Compose.UI)
    implementation(Compose.TOOLING)
    implementation(Compose.FOUNDATION)

    //Room
    implementation (Room.RUNTIME)

    kapt(Room.COMPILER)
    implementation (Room.KTX)
    implementation(Room.GUAVA)

    // dagger hilt
    implementation (DaggerHilt.DAGGER_HILT)
    kapt (DaggerHilt.DAGGER_HILT_COMPILER)
    implementation (DaggerHilt.DAGGER_HILT_COMPOSE)


    // Retrofit
    implementation (Retrofit.RETROFIT)
    implementation (Retrofit.CONVERTER_GSON)
    implementation (Retrofit.CONVERTER_JAXB)

    //okHttp
    implementation (OkHttp.OKHTTP)
    implementation (OkHttp.LOGGING_INTERCEPTOR)

    //navigation
    implementation (Navigation.FRAGMENT)
    implementation (Navigation.UI)

    //Thired party
    implementation(ThirdParty.SPLASHSCREEN)
    implementation(ThirdParty.GLIDE)
    kapt(ThirdParty.GLIDE_COMPILER)

}